// Generated by view binder compiler. Do not edit!
package com.expensemanager.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensemanager.app.R;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.slider.Slider;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAdvancedFilterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ChipGroup chipGroupBanks;

  @NonNull
  public final TextInputEditText etDateFrom;

  @NonNull
  public final TextInputEditText etDateTo;

  @NonNull
  public final TextInputEditText etMaxAmount;

  @NonNull
  public final TextInputEditText etMinAmount;

  @NonNull
  public final Slider sliderConfidence;

  private DialogAdvancedFilterBinding(@NonNull ScrollView rootView,
      @NonNull ChipGroup chipGroupBanks, @NonNull TextInputEditText etDateFrom,
      @NonNull TextInputEditText etDateTo, @NonNull TextInputEditText etMaxAmount,
      @NonNull TextInputEditText etMinAmount, @NonNull Slider sliderConfidence) {
    this.rootView = rootView;
    this.chipGroupBanks = chipGroupBanks;
    this.etDateFrom = etDateFrom;
    this.etDateTo = etDateTo;
    this.etMaxAmount = etMaxAmount;
    this.etMinAmount = etMinAmount;
    this.sliderConfidence = sliderConfidence;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAdvancedFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAdvancedFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_advanced_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAdvancedFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip_group_banks;
      ChipGroup chipGroupBanks = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupBanks == null) {
        break missingId;
      }

      id = R.id.et_date_from;
      TextInputEditText etDateFrom = ViewBindings.findChildViewById(rootView, id);
      if (etDateFrom == null) {
        break missingId;
      }

      id = R.id.et_date_to;
      TextInputEditText etDateTo = ViewBindings.findChildViewById(rootView, id);
      if (etDateTo == null) {
        break missingId;
      }

      id = R.id.et_max_amount;
      TextInputEditText etMaxAmount = ViewBindings.findChildViewById(rootView, id);
      if (etMaxAmount == null) {
        break missingId;
      }

      id = R.id.et_min_amount;
      TextInputEditText etMinAmount = ViewBindings.findChildViewById(rootView, id);
      if (etMinAmount == null) {
        break missingId;
      }

      id = R.id.slider_confidence;
      Slider sliderConfidence = ViewBindings.findChildViewById(rootView, id);
      if (sliderConfidence == null) {
        break missingId;
      }

      return new DialogAdvancedFilterBinding((ScrollView) rootView, chipGroupBanks, etDateFrom,
          etDateTo, etMaxAmount, etMinAmount, sliderConfidence);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
