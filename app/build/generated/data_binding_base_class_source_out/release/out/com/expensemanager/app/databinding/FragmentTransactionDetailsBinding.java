// Generated by view binder compiler. Do not edit!
package com.expensemanager.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensemanager.app.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnClose;

  @NonNull
  public final MaterialButton btnEditCategory;

  @NonNull
  public final MaterialButton btnEditMerchant;

  @NonNull
  public final MaterialButton btnMarkDuplicate;

  @NonNull
  public final MaterialButton btnSaveTransaction;

  @NonNull
  public final MaterialCardView layoutSimilarWarning;

  @NonNull
  public final ProgressBar progressConfidence;

  @NonNull
  public final TextView tvBankName;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvConfidenceLabel;

  @NonNull
  public final TextView tvConfidenceScore;

  @NonNull
  public final TextView tvDateTime;

  @NonNull
  public final TextView tvMerchantName;

  @NonNull
  public final TextView tvRawSms;

  @NonNull
  public final TextView tvSimilarCount;

  @NonNull
  public final TextView tvTransactionAmount;

  @NonNull
  public final View viewCategoryColor;

  private FragmentTransactionDetailsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnClose, @NonNull MaterialButton btnEditCategory,
      @NonNull MaterialButton btnEditMerchant, @NonNull MaterialButton btnMarkDuplicate,
      @NonNull MaterialButton btnSaveTransaction, @NonNull MaterialCardView layoutSimilarWarning,
      @NonNull ProgressBar progressConfidence, @NonNull TextView tvBankName,
      @NonNull TextView tvCategory, @NonNull TextView tvConfidenceLabel,
      @NonNull TextView tvConfidenceScore, @NonNull TextView tvDateTime,
      @NonNull TextView tvMerchantName, @NonNull TextView tvRawSms,
      @NonNull TextView tvSimilarCount, @NonNull TextView tvTransactionAmount,
      @NonNull View viewCategoryColor) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnEditCategory = btnEditCategory;
    this.btnEditMerchant = btnEditMerchant;
    this.btnMarkDuplicate = btnMarkDuplicate;
    this.btnSaveTransaction = btnSaveTransaction;
    this.layoutSimilarWarning = layoutSimilarWarning;
    this.progressConfidence = progressConfidence;
    this.tvBankName = tvBankName;
    this.tvCategory = tvCategory;
    this.tvConfidenceLabel = tvConfidenceLabel;
    this.tvConfidenceScore = tvConfidenceScore;
    this.tvDateTime = tvDateTime;
    this.tvMerchantName = tvMerchantName;
    this.tvRawSms = tvRawSms;
    this.tvSimilarCount = tvSimilarCount;
    this.tvTransactionAmount = tvTransactionAmount;
    this.viewCategoryColor = viewCategoryColor;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transaction_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      MaterialButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_edit_category;
      MaterialButton btnEditCategory = ViewBindings.findChildViewById(rootView, id);
      if (btnEditCategory == null) {
        break missingId;
      }

      id = R.id.btn_edit_merchant;
      MaterialButton btnEditMerchant = ViewBindings.findChildViewById(rootView, id);
      if (btnEditMerchant == null) {
        break missingId;
      }

      id = R.id.btn_mark_duplicate;
      MaterialButton btnMarkDuplicate = ViewBindings.findChildViewById(rootView, id);
      if (btnMarkDuplicate == null) {
        break missingId;
      }

      id = R.id.btn_save_transaction;
      MaterialButton btnSaveTransaction = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveTransaction == null) {
        break missingId;
      }

      id = R.id.layout_similar_warning;
      MaterialCardView layoutSimilarWarning = ViewBindings.findChildViewById(rootView, id);
      if (layoutSimilarWarning == null) {
        break missingId;
      }

      id = R.id.progress_confidence;
      ProgressBar progressConfidence = ViewBindings.findChildViewById(rootView, id);
      if (progressConfidence == null) {
        break missingId;
      }

      id = R.id.tv_bank_name;
      TextView tvBankName = ViewBindings.findChildViewById(rootView, id);
      if (tvBankName == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_confidence_label;
      TextView tvConfidenceLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvConfidenceLabel == null) {
        break missingId;
      }

      id = R.id.tv_confidence_score;
      TextView tvConfidenceScore = ViewBindings.findChildViewById(rootView, id);
      if (tvConfidenceScore == null) {
        break missingId;
      }

      id = R.id.tv_date_time;
      TextView tvDateTime = ViewBindings.findChildViewById(rootView, id);
      if (tvDateTime == null) {
        break missingId;
      }

      id = R.id.tv_merchant_name;
      TextView tvMerchantName = ViewBindings.findChildViewById(rootView, id);
      if (tvMerchantName == null) {
        break missingId;
      }

      id = R.id.tv_raw_sms;
      TextView tvRawSms = ViewBindings.findChildViewById(rootView, id);
      if (tvRawSms == null) {
        break missingId;
      }

      id = R.id.tv_similar_count;
      TextView tvSimilarCount = ViewBindings.findChildViewById(rootView, id);
      if (tvSimilarCount == null) {
        break missingId;
      }

      id = R.id.tv_transaction_amount;
      TextView tvTransactionAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvTransactionAmount == null) {
        break missingId;
      }

      id = R.id.view_category_color;
      View viewCategoryColor = ViewBindings.findChildViewById(rootView, id);
      if (viewCategoryColor == null) {
        break missingId;
      }

      return new FragmentTransactionDetailsBinding((ScrollView) rootView, btnClose, btnEditCategory,
          btnEditMerchant, btnMarkDuplicate, btnSaveTransaction, layoutSimilarWarning,
          progressConfidence, tvBankName, tvCategory, tvConfidenceLabel, tvConfidenceScore,
          tvDateTime, tvMerchantName, tvRawSms, tvSimilarCount, tvTransactionAmount,
          viewCategoryColor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
