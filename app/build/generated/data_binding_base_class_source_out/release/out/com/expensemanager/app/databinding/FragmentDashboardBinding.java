// Generated by view binder compiler. Do not edit!
package com.expensemanager.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensemanager.app.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnAddExpense;

  @NonNull
  public final MaterialButton btnAiInsights;

  @NonNull
  public final MaterialButton btnDashboardPeriod;

  @NonNull
  public final MaterialButton btnExportData;

  @NonNull
  public final MaterialButton btnSettings;

  @NonNull
  public final MaterialButton btnSyncSms;

  @NonNull
  public final MaterialButton btnTimeFilter;

  @NonNull
  public final MaterialButton btnViewBudget;

  @NonNull
  public final MaterialButton btnViewInsights;

  @NonNull
  public final MaterialCardView cardTransactionCount;

  @NonNull
  public final FrameLayout frameWeeklyChart;

  @NonNull
  public final LinearLayout layoutMonthlyComparison;

  @NonNull
  public final RecyclerView recyclerTopCategories;

  @NonNull
  public final RecyclerView recyclerTopMerchants;

  @NonNull
  public final TextView tvLastMonthAmount;

  @NonNull
  public final TextView tvSpendingComparison;

  @NonNull
  public final TextView tvThisMonthAmount;

  @NonNull
  public final TextView tvTotalBalance;

  @NonNull
  public final TextView tvTotalSpent;

  @NonNull
  public final TextView tvTransactionCount;

  private FragmentDashboardBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnAddExpense, @NonNull MaterialButton btnAiInsights,
      @NonNull MaterialButton btnDashboardPeriod, @NonNull MaterialButton btnExportData,
      @NonNull MaterialButton btnSettings, @NonNull MaterialButton btnSyncSms,
      @NonNull MaterialButton btnTimeFilter, @NonNull MaterialButton btnViewBudget,
      @NonNull MaterialButton btnViewInsights, @NonNull MaterialCardView cardTransactionCount,
      @NonNull FrameLayout frameWeeklyChart, @NonNull LinearLayout layoutMonthlyComparison,
      @NonNull RecyclerView recyclerTopCategories, @NonNull RecyclerView recyclerTopMerchants,
      @NonNull TextView tvLastMonthAmount, @NonNull TextView tvSpendingComparison,
      @NonNull TextView tvThisMonthAmount, @NonNull TextView tvTotalBalance,
      @NonNull TextView tvTotalSpent, @NonNull TextView tvTransactionCount) {
    this.rootView = rootView;
    this.btnAddExpense = btnAddExpense;
    this.btnAiInsights = btnAiInsights;
    this.btnDashboardPeriod = btnDashboardPeriod;
    this.btnExportData = btnExportData;
    this.btnSettings = btnSettings;
    this.btnSyncSms = btnSyncSms;
    this.btnTimeFilter = btnTimeFilter;
    this.btnViewBudget = btnViewBudget;
    this.btnViewInsights = btnViewInsights;
    this.cardTransactionCount = cardTransactionCount;
    this.frameWeeklyChart = frameWeeklyChart;
    this.layoutMonthlyComparison = layoutMonthlyComparison;
    this.recyclerTopCategories = recyclerTopCategories;
    this.recyclerTopMerchants = recyclerTopMerchants;
    this.tvLastMonthAmount = tvLastMonthAmount;
    this.tvSpendingComparison = tvSpendingComparison;
    this.tvThisMonthAmount = tvThisMonthAmount;
    this.tvTotalBalance = tvTotalBalance;
    this.tvTotalSpent = tvTotalSpent;
    this.tvTransactionCount = tvTransactionCount;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_expense;
      MaterialButton btnAddExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnAddExpense == null) {
        break missingId;
      }

      id = R.id.btn_ai_insights;
      MaterialButton btnAiInsights = ViewBindings.findChildViewById(rootView, id);
      if (btnAiInsights == null) {
        break missingId;
      }

      id = R.id.btn_dashboard_period;
      MaterialButton btnDashboardPeriod = ViewBindings.findChildViewById(rootView, id);
      if (btnDashboardPeriod == null) {
        break missingId;
      }

      id = R.id.btn_export_data;
      MaterialButton btnExportData = ViewBindings.findChildViewById(rootView, id);
      if (btnExportData == null) {
        break missingId;
      }

      id = R.id.btn_settings;
      MaterialButton btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.btn_sync_sms;
      MaterialButton btnSyncSms = ViewBindings.findChildViewById(rootView, id);
      if (btnSyncSms == null) {
        break missingId;
      }

      id = R.id.btn_time_filter;
      MaterialButton btnTimeFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeFilter == null) {
        break missingId;
      }

      id = R.id.btn_view_budget;
      MaterialButton btnViewBudget = ViewBindings.findChildViewById(rootView, id);
      if (btnViewBudget == null) {
        break missingId;
      }

      id = R.id.btn_view_insights;
      MaterialButton btnViewInsights = ViewBindings.findChildViewById(rootView, id);
      if (btnViewInsights == null) {
        break missingId;
      }

      id = R.id.card_transaction_count;
      MaterialCardView cardTransactionCount = ViewBindings.findChildViewById(rootView, id);
      if (cardTransactionCount == null) {
        break missingId;
      }

      id = R.id.frame_weekly_chart;
      FrameLayout frameWeeklyChart = ViewBindings.findChildViewById(rootView, id);
      if (frameWeeklyChart == null) {
        break missingId;
      }

      id = R.id.layout_monthly_comparison;
      LinearLayout layoutMonthlyComparison = ViewBindings.findChildViewById(rootView, id);
      if (layoutMonthlyComparison == null) {
        break missingId;
      }

      id = R.id.recycler_top_categories;
      RecyclerView recyclerTopCategories = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTopCategories == null) {
        break missingId;
      }

      id = R.id.recycler_top_merchants;
      RecyclerView recyclerTopMerchants = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTopMerchants == null) {
        break missingId;
      }

      id = R.id.tv_last_month_amount;
      TextView tvLastMonthAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvLastMonthAmount == null) {
        break missingId;
      }

      id = R.id.tv_spending_comparison;
      TextView tvSpendingComparison = ViewBindings.findChildViewById(rootView, id);
      if (tvSpendingComparison == null) {
        break missingId;
      }

      id = R.id.tv_this_month_amount;
      TextView tvThisMonthAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvThisMonthAmount == null) {
        break missingId;
      }

      id = R.id.tv_total_balance;
      TextView tvTotalBalance = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalBalance == null) {
        break missingId;
      }

      id = R.id.tv_total_spent;
      TextView tvTotalSpent = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalSpent == null) {
        break missingId;
      }

      id = R.id.tv_transaction_count;
      TextView tvTransactionCount = ViewBindings.findChildViewById(rootView, id);
      if (tvTransactionCount == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ScrollView) rootView, btnAddExpense, btnAiInsights,
          btnDashboardPeriod, btnExportData, btnSettings, btnSyncSms, btnTimeFilter, btnViewBudget,
          btnViewInsights, cardTransactionCount, frameWeeklyChart, layoutMonthlyComparison,
          recyclerTopCategories, recyclerTopMerchants, tvLastMonthAmount, tvSpendingComparison,
          tvThisMonthAmount, tvTotalBalance, tvTotalSpent, tvTransactionCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
