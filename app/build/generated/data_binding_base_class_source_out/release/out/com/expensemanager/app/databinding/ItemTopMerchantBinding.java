// Generated by view binder compiler. Do not edit!
package com.expensemanager.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensemanager.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTopMerchantBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvMerchantName;

  @NonNull
  public final TextView tvPercentage;

  @NonNull
  public final TextView tvTransactionCount;

  @NonNull
  public final View viewCategoryColor;

  private ItemTopMerchantBinding(@NonNull LinearLayout rootView, @NonNull TextView tvAmount,
      @NonNull TextView tvCategory, @NonNull TextView tvMerchantName,
      @NonNull TextView tvPercentage, @NonNull TextView tvTransactionCount,
      @NonNull View viewCategoryColor) {
    this.rootView = rootView;
    this.tvAmount = tvAmount;
    this.tvCategory = tvCategory;
    this.tvMerchantName = tvMerchantName;
    this.tvPercentage = tvPercentage;
    this.tvTransactionCount = tvTransactionCount;
    this.viewCategoryColor = viewCategoryColor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTopMerchantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTopMerchantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_top_merchant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTopMerchantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_amount;
      TextView tvAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_merchant_name;
      TextView tvMerchantName = ViewBindings.findChildViewById(rootView, id);
      if (tvMerchantName == null) {
        break missingId;
      }

      id = R.id.tv_percentage;
      TextView tvPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvPercentage == null) {
        break missingId;
      }

      id = R.id.tv_transaction_count;
      TextView tvTransactionCount = ViewBindings.findChildViewById(rootView, id);
      if (tvTransactionCount == null) {
        break missingId;
      }

      id = R.id.view_category_color;
      View viewCategoryColor = ViewBindings.findChildViewById(rootView, id);
      if (viewCategoryColor == null) {
        break missingId;
      }

      return new ItemTopMerchantBinding((LinearLayout) rootView, tvAmount, tvCategory,
          tvMerchantName, tvPercentage, tvTransactionCount, viewCategoryColor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
