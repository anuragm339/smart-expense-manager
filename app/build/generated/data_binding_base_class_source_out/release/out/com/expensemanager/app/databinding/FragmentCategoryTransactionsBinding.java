// Generated by view binder compiler. Do not edit!
package com.expensemanager.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensemanager.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCategoryTransactionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnFilterDate;

  @NonNull
  public final MaterialButton btnSort;

  @NonNull
  public final LinearLayout layoutEmpty;

  @NonNull
  public final RecyclerView recyclerTransactions;

  @NonNull
  public final TextView tvCategoryName;

  @NonNull
  public final TextView tvCategorySummary;

  @NonNull
  public final TextView tvCategoryTotal;

  @NonNull
  public final View viewCategoryColor;

  private FragmentCategoryTransactionsBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnFilterDate, @NonNull MaterialButton btnSort,
      @NonNull LinearLayout layoutEmpty, @NonNull RecyclerView recyclerTransactions,
      @NonNull TextView tvCategoryName, @NonNull TextView tvCategorySummary,
      @NonNull TextView tvCategoryTotal, @NonNull View viewCategoryColor) {
    this.rootView = rootView;
    this.btnFilterDate = btnFilterDate;
    this.btnSort = btnSort;
    this.layoutEmpty = layoutEmpty;
    this.recyclerTransactions = recyclerTransactions;
    this.tvCategoryName = tvCategoryName;
    this.tvCategorySummary = tvCategorySummary;
    this.tvCategoryTotal = tvCategoryTotal;
    this.viewCategoryColor = viewCategoryColor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCategoryTransactionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCategoryTransactionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_category_transactions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCategoryTransactionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_filter_date;
      MaterialButton btnFilterDate = ViewBindings.findChildViewById(rootView, id);
      if (btnFilterDate == null) {
        break missingId;
      }

      id = R.id.btn_sort;
      MaterialButton btnSort = ViewBindings.findChildViewById(rootView, id);
      if (btnSort == null) {
        break missingId;
      }

      id = R.id.layout_empty;
      LinearLayout layoutEmpty = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmpty == null) {
        break missingId;
      }

      id = R.id.recycler_transactions;
      RecyclerView recyclerTransactions = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTransactions == null) {
        break missingId;
      }

      id = R.id.tv_category_name;
      TextView tvCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryName == null) {
        break missingId;
      }

      id = R.id.tv_category_summary;
      TextView tvCategorySummary = ViewBindings.findChildViewById(rootView, id);
      if (tvCategorySummary == null) {
        break missingId;
      }

      id = R.id.tv_category_total;
      TextView tvCategoryTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryTotal == null) {
        break missingId;
      }

      id = R.id.view_category_color;
      View viewCategoryColor = ViewBindings.findChildViewById(rootView, id);
      if (viewCategoryColor == null) {
        break missingId;
      }

      return new FragmentCategoryTransactionsBinding((LinearLayout) rootView, btnFilterDate,
          btnSort, layoutEmpty, recyclerTransactions, tvCategoryName, tvCategorySummary,
          tvCategoryTotal, viewCategoryColor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
